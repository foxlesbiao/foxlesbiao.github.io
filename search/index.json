[{"content":"PixelOS PixelOS is an AOSP based ROM, with Google apps included and all Pixel goodies (launcher, wallpapers, themed icons, google sans fonts, Monet color based system wide theming, boot animation), a fork of OG Pixel Experience with improvements on the top of it. Huge respect to Pixel Experience team for their work, thanks to them for making this ROM possible.\nIn short a fully functional Pixel Experience with just the right amount of essentials.\nYour warranty is now void.\n I am not responsible for bricked devices, dead SD cards, thermonuclear war, or you getting fired because the alarm app failed. Please do some research if you have any concerns about features included in this ROM before flashing it! YOU are choosing to make these modifications, and if you point the finger at me for messing up your device, I will laugh at you.  Improvements over PixelExperience Performance improvements from ProtonAOSP\n3-finger swipe to capture screenshots Double tap to sleep on lockscreen and status bar\nAdded Screen Recording Customizations\nAdded Advanced Reboot\nAllow disabling Screenshot Sounds\nAdded Bluetooth headset battery indicator\nAdded in-call vibration options\nFirst class implementation of URL Repainter app\nAdded Adaptive playback\nAdded themed icons for a lot of third party icons in stock Pixel launcher\nAdded monet to Settings app icon color\nAdded monet in power menu\nExposed legacy WiFi and Cellular data QS tiles\nAdded an option to disable unlock ripple animation\nAdded bluetooth battery level indicator on status bar\nAdded NFC tile in QS for supported devices\nAdded double tap/long press power button to toggle torch\nReduced log spam verbosity\nA lot of under the hood UI fixes and improvements\nDevice Specific Issues: Requirements Downloads Download\nFirmware\nMagisk (optional) \nDFE (optional) (not recommended) \nRecovery PixelOS Recovery https://github.com/foxlesbiao/SHRP-device-sagit/releases\nNote: GApps are included, don\u0026rsquo;t flash separately.\nNotes\n• Encryption is enabled by default\n• SELinux is enforcing/permissive\n• (?) Support related to MIUI/ANX Camera\n• (?) QuicksilveR v2.5 Kernel Included\nPixelOS Recovery is recommended if you want to stay encrypted, no custom recovery supports encryption on Android12, i.e. you won\u0026rsquo;t be able to decrypt your data.\nFlashing Instructions\nClean flash (coming from a different ROM):\n• Download ROM from the link above\n• Download Magisk v23.0 or newer (optionally)\n• Reboot to recovery\n• Format data (if encrypted)\n• Wipe system, vendor, cache, dalvik, data\n• Flash latest android 11 global stable firmware (link above)\n• Flash ROM zip\n• Reboot and voila!\n• To get root access, reboot to recovery after ROM setup and flash magisk.\nUpdating to a newer build (dirty flash):\n• Flash ROM zip and magisk (optional)\n• Wipe system, vendor, cache, dalvik\n• Reboot and voila!\nSource Code\nPixelOS http://github.com/PixelOS-Pixelish\nDevice Tree and Vendor Tree https://github.com/Huexxx\nKernel Tree https://github.com/Huexxx/kernel_xiaomi_msm8998\nROM OS Version: Android 12.0\nROM Kernel: Linux 4.14.x\nLatest Release Date: 2022-03-01\n Photo by Settings \n","date":"2022-03-01T00:00:00Z","image":"https://foxlesbiao.github.io/p/pixelos-sagit/latest_hu1808470d7292d5b2b556b467927257d3_449441_120x120_fill_box_smart1_3.png","permalink":"https://foxlesbiao.github.io/p/pixelos-sagit/","title":"PixelOS for Xiaomi Mi 6"},{"content":"系統環境 我的是 Manjaro KDE Plasma 21.2.2 和 Arch KDE\n工具和依賴  lib32-gcc-libs git gnupg flex bison gperf sdl wxgtk2 squashfs-tools curl ncurses zlib schedtool perl-switch zip unzip libxslt bc rsync ncurses5-compat-libs lib32-zlib lib32-ncurses lib32-readline lib32-ncurses5-compat-libs aosp-devel lineageos-devel\n  openjdk\n 同步 Android Open Source Project 和 device tree   ROM 參考 projrct-elixir\n  mkdir projrct-elixir \u0026amp;\u0026amp; cd projrct-elixir\n  repo init -u https://github.com/Project-Elixir/manifest -b snow\n  repo sync -c -j$(nproc \u0026ndash;all) \u0026ndash;force-sync \u0026ndash;no-clone-bundle \u0026ndash;no-tags\n  device tree 參考\n  git clone https://github.com/AOSP-12/device_xiaomi_sagit.git device/xiaomi/sagit\n  git clone https://github.com/AOSP-12/device_xiaomi_msm8998-common.git device/xiaomi/msm8998-common\n  git clone https://github.com/AOSP-12/vendor_xiaomi.git vendor/xiaomi\n  git clone https://github.com/AOSP-12/kernel_xiaomi_msm8998.git kernel/xiaomi/msm8998\n  修改文件 參考你要編譯 ROM device 官方倉庫 比如 OctaviOS-Devices\n隨便找一個 device_xxxxx_xxxx\n把 AndroidProducts.mk 和 aosp_sagit.mk 改成官方倉庫的樣子\n aosp_sagit.mk \u0026gt; octavi_sagit.mk 打開 AndroidProducts.mk 和 aosp_sagit.mk，按照下面的來改 PRODUCT_NAME := aosp_sagit \u0026gt; PRODUCT_NAME := octavi_sagit $(LOCAL_DIR)/aosp_sagit.mk \u0026gt; $(LOCAL_DIR)/octavi_sagit.mk  開始編譯 . build/envsetup.sh\nlunch aosp_$device-userdebug\nbrunch $device\n","date":"2022-02-08T00:00:00Z","image":"https://foxlesbiao.github.io/p/builder-aosp/facebook_cover_photo_1_hu226c0f88796787332dc9551055b9be4b_7265_120x120_fill_box_smart1_3.png","permalink":"https://foxlesbiao.github.io/p/builder-aosp/","title":"How to compile Android Open Source Project"},{"content":" OctaviOS is an AOSP based rom focusing on Unique and Smooth UI with handy features. OctaviOS is a reborn of pie based PearlOS.\n Your warranty is now void. We are not responsible for anything that may happen to your phone by installing any custom ROMs and/or kernels. You do it at your own risk and take the responsibility upon yourself and you are not to blame us or XDA and its respected developers.  CLEAN FLASH -Reboot to recovery -Take Backup (Not Necessary) -Flash your firmware(If required) -Reboot To Recovery -Wipe System, Vendor, Cache, Dalvik Cache and Data -Flash the ROM -Flash Gapps -Flash magisk (optional) -Reboot\n Download\n -Lineage OS\n-AOSP\n-Superior OS\n-Pixel Experience\n-Extended UI\n-Havoc OS\n-CrDroid ROM\n-Fluid OS\n-Others, I forgot to mention\n OctaviOS Source\n  Telegram Group\n REPORTING BUGS  As soon as the problem occurs, take a logcat!\n OctaviOS for Device_Name\nDevice: sagit\nMaintainer: foxlesbiao\nBuild Type: Unofficial\nKernel Source\nROM OS Version: 12.0\nROM Kernel: Linux 4.4\nROM Firmware Required: Must be on Latest Firmware Based On: AOSP\nVersion Information\nStatus: Testing\nSELinux Status: Permissive\nRelease Date: 2022-02-24\n Photo by foxlesbiao \n","date":"2022-02-04T00:00:00Z","image":"https://foxlesbiao.github.io/p/octavios-sagit/About_hu6eaf9820d62fd3ee316c9345dfb06ecd_75908_120x120_fill_box_smart1_3.png","permalink":"https://foxlesbiao.github.io/p/octavios-sagit/","title":"Octavi OS for Xiaomi Mi 6"},{"content":" 更新状态: 维护中\nupdate status: maintain\n构建: Unofficial\nConstruct: Unofficial\n Project Elixir Project Elixir is another aftermarket AOSP ROM which basically offers minimal UI enhancement \u0026amp; close to Stock Android ROM with great performance, security and stability. Most of the OEMs' these days will provide slow and untimely updates, but we don\u0026rsquo;t do that here. We closely follow Google to bring the latest updates to our users, and even prolong support for devices that have been declared obsolete by OEMs. Our ROMs' source code is open-source, secure, stable, and outstanding. Your experience while using Project Elixir will be butter smooth without compromising the quality of the Android experience. In short, it\u0026rsquo;s perfectly balanced between Great Performance, Security, stability, minimal UI \u0026amp; awesome features including pixel goodies So do not hesitate anymore, join us now and start enjoying the beauty of stock Android. Download and enjoy Project Elixir on your respective devices!\nDownload Please keep in mind that these are Gapps Builds and there is no vanilla build of this rom available.\n Download\n What works? Wifi | RIL | Mobile data | GPS | Camera Flashlight | Camcorder | Bluetooth | Fingerprint reader | Lights | Sound | vibration Almost everything\nWhat doesn\u0026rsquo;t work? or Any Bug ? You tell me\nSources and Documentation  ROM Source Code\nsagit\nmsm8998-common\nvendor xiaomi\nkernerl\n update log 2022/1/22 1.first build\n Photo by Settings \n","date":"2022-01-22T00:00:00Z","image":"https://foxlesbiao.github.io/p/android12-sagit/snHlKrS2_hud92470c67cf510d7e6cd00163cc8551f_124124_120x120_fill_q75_box_smart1.jpg","permalink":"https://foxlesbiao.github.io/p/android12-sagit/","title":"PROJECT ELIXIR for Xiaomi Mi 6"},{"content":"Existing device tree compiled 这里适合已经有 device tree github 仓库的\nThis is suitable for existing device tree github warehouses\n1:create folder,Copy TWRP/OFRP/SHRP repository mkdir TWRP/OFRP/SHRP \u0026amp;\u0026amp; cd TWRP/OFRP/SHRP\nTeamWin Recovery Project: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git\nOrangeFox Recovery Project: https://gitlab.com/OrangeFox/Manifest.git\nSKYHAWK Recovery Project: https://github.com/SHRP/platform_manifest_twrp_omni.git\n1.1: sync TWRP：repo init -u git://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-9.0\nOFRP：repo init -u https://gitlab.com/OrangeFox/Manifest.git -b fox_9.0\nSHRP：repo init -u git://github.com/SHRP/manifest.git -b v3_11.0/v3_10.0/v3_9.0\nSHRP 按照分支拉取，更改后面的 v3_11.0 就可以. 官方参考\nTWRP/OFRP/SHRP：repo sync or repo sync -c -j$(nproc \u0026ndash;all) \u0026ndash;force-sync \u0026ndash;no-clone-bundle \u0026ndash;no-tags\n2: copy device tree repository  cd source-dir git clone git@github.com:foxlesbiao/SHRP-device-sagit.git device/xiaomi/sagit\n注意这个是我的设备，这个仓库不适用你的手机  2.1: builder TWRP/OFRP/SHRP  cd source-dir . build/envsetup.sh or source build/envsetup.sh make clean \u0026amp;\u0026amp; lunch omni_-eng \u0026amp;\u0026amp; mka recoveryimage  2.2: SHRP dtGuide SHRP 需要编写 BoardConfig.mk 才可以正常编译 SHRP\n官方参考 也可以参考我的 文件 #SHRP 的部分\n SHRP dtGuide \n2.3: OFRP vendorsetup 和 SHRP 一样，OFRP 也有 var 特性\n在同步 OFRP 仓库之后， vendor/recovery/orangefox_build_vars.txt 就是 OFRP 全部 var 特性\n这个文件需要放在 vendor/omni/ 或者 device/ 文件夹里面\nvendor/omni/ 文件夹是全部设备 device 文件夹是单独建立防止多设备编译搞混\n这是我的 vendorsetup.sh 文件  OFRP vendorsetup \nWrite the device tree file 这里适合 github 没有 device tree 仓库的\nThis is suitable for github without device tree repository\n1:Know your phone partition  独立 recovery 分区 A only 分区 集成recovery 分区集成在 boot 分区 A/B 分区 V-AB 分区 查看是否动态分区  1.1:Download the official rom and extract the img file  独立 recovery 分区，提取 recovery.img 集成 recovery 分区，提取 boot.img 解包 recovery.img 和 boot.img 文件  1.2:Device tree file structure 可以查看我仓库里的device tree文件结构\n  prebuilt 文件夹是我们提取出来的预编译内核\nimage.gz 是内核本体 大概原名字是 xxxx-kernel\ndtb.img 有一些手机会有这个文件 大概原名字是 xxxx-dtb\ndtbo.img 如果有的话，也需要这个文件 大概原名字是 xxxx-dtbo\n  root 文件夹\n提取在 RamDisk 目录下的全部 .rc 文件\n  mk 文件夹是手机型号各种参数\nAndroid.mk 说明你的机型代号\nAndroidProduct.mk 告知 TWRP/OFRP/SHRP 源代码说明你机型代号的名字\nBoardConfig.mk 配置文件\ndevice.mk 这个是写 A/B 分区配置文件\nrecovery.fstab 声明每个分区挂载位置，提取自 RamDisk 文件\n1.3:Write the device tree file 注意: root/recovery 文件目录也可以是这样 recovery/root\n device tree file directory  文件命名可以参考我的命名\n  提取文件到 device tree\n ramdisk/etc/recovery.fstab ,把这个文件放在 device tree 根目录\n如果没有这个文件可以在 system/etc or vendor/etc 里面的 fstab 文件，重命名为 recovery.fstab 放在 device tree 根目录 把 ramdisk 文件夹下的 .rc 文件提取到 root/recovery or recovery/root 把 split-img 文件夹下的 xxxx-dtbo and xxxx-dtb and xxxx-kernel\n分别重命名为 dtbo.img and dtb.img and image.gz\n放在 device tree 根目录的 prebuilt 目录下    1.4:write mk file 这个是按照我的文件编写的查看\n Android.mk 将红线部分改为你的机型代号\n Android.mk  AndroidProducts.mk 将红线部分改为你自己所命名的文件\n AndroidProducts.mk  BoardConfig.mk LOCAL_PATH := device/xiaomi/sagit \u0026gt; LOCAL_PATH := device/品牌英文名称/机型代号\n BoardConfig.mk  这个做了通用化处理\nTARGET_OTA_ASSERT_DEVICE := sagit \u0026gt; TARGET_OTA_ASSERT_DEVICE := 机型代号\n在 split-img 文件夹下找到 xxxx-cmdline 文件，打开并复制里面的话\nBOARD_KERNEL_CMDLINE := console=ttyMSM0,115200,n8 androidboot.console=ttyMSM0 earlycon=msm_serial_dm,0xc1b0000 \u0026gt; BOARD_KERNEL_CMDLINE := 你复制的\n声明预编译内核位置 dtb 和 dtbo  TARGET_PREBUILT_DTB := $(LOCAL_PATH)/prebuilt/dtb.img TARGET_PREBUILT_DTBOIMAGE := $(LOCAL_PATH)/prebuilt/dtbo.img BOARD_INCLUDE_RECOVERY_DTBO := true\n BoardConfig.mk \n BoardConfig.mk  TARGET_KERNEL_CONFIG := sagit-fox_defconfig \u0026gt; TARGET_KERNEL_CONFIG := 机型代号_defconfig\nTARGET_KERNEL_SOURCE := kernel/xiaomi/sagit \u0026gt; TARGET_KERNEL_SOURCE := kernel/品牌英文名称/机型代号\n BoardConfig.mk  TARGET_BOARD_PLATFORM := msm8998 \u0026gt; TARGET_BOARD_PLATFORM := 你的soc型号 动态分区需要了解 super 分区大小，了解 spuer 分区包含那些分区\n 动态分区需要的代码 \n如果不是动态分区请删除 #System as root 和 # AVB 还有 # fstab 代码段\n没有 AVB 验证 可以删除 # AVB 代码段\n如果有独立 recovery 分区，删除这些\n如果不是请保留 BOARD_USES_RECOVERY_AS_BOOT := true TARGET_NO_RECOVERY := true\n这个是 # Bootloader TARGET_BOOTLOADER_BOARD_NAME := msm8998 \u0026gt; TARGET_BOOTLOADER_BOARD_NAME := 机型代号 TARGET_NO_BOOTLOADER := true \u0026gt; TARGET_NO_BOOTLOADER := 有 fastboot 就 true，没有就 false TARGET_USES_UEFI := true V-AB 分区需要，如果不是就删除\n boot分区需要的代码 \ndevice.mk 文件，这个文件只用于 V-AB 分区和动态分区，还有 A/B 分区的手机\n请在有 V-AB 分区的手机，device tree 仓库搜索复制到你的文件\n只需要更改这一代码段就可以了 LOCAL_PATH := device/xxxx/xxxx \u0026gt; LOCAL_PATH := device/品牌英文名称/机型代号\n动态分区和 A/B 分区，我不知道怎么改，有参考的可以在这里提交给我，我来更改。\nomni_机型代号.mk 文件或者是 twrp_机型代号.mk  omni_机型代号.mk  PRODUCT_RELEASE_NAME := 机型代号\nPRODUCT_DEVICE := 机型代号\nPRODUCT_NAME := omni_机型代号 或者 twrp_机型代号\nPRODUCT_BRAND := 厂家英文\nPRODUCT_MODEL := 手机英文\nPRODUCT_MANUFACTURER := 厂家英文    完\u0026hellip;\u0026hellip;应该\n","date":"2022-01-11T00:00:00Z","image":"https://foxlesbiao.github.io/p/builder-twrp/logo_hu181bc3598798b19ac0bf248a4eb4fcfc_223790_120x120_fill_q75_box_smart1.jpg","permalink":"https://foxlesbiao.github.io/p/builder-twrp/","title":"How to compile TWRP"},{"content":"正文 这是一个适用于小米6 TWRP\nThis is a TWRP for Mi 6\n支持 android 12 Data 解密\nSupport android 12 Data decryption\nAndroid 12 FBE 无法工作\nAndroid 12 FBE does not work\n引用  sagit - device\n  My modify sagit - device\n  download link\n 图片  Photo by OrangeFox-Recovery   Photo by OrangeFox-Recovery   Photo by OrangeFox-Recovery   Photo by OrangeFox-Recovery   Photo by OrangeFox-Recovery \n","date":"2022-01-06T00:00:00Z","image":"https://foxlesbiao.github.io/p/orangefox/logo_hu181bc3598798b19ac0bf248a4eb4fcfc_223790_120x120_fill_q75_box_smart1.jpg","permalink":"https://foxlesbiao.github.io/p/orangefox/","title":"OrangeFox"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://foxlesbiao.github.io/p/","title":""}]